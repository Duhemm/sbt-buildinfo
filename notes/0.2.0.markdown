  [Sciss]: https://github.com/Sciss
  [4]: https://github.com/sbt/sbt-buildinfo/pull/4
  [5]: https://github.com/sbt/sbt-buildinfo/pull/5

## breaking change `BuildInfoKey`

Starting sbt-buildinfo 0.2.0, `buildInfoKeys` is changed from `Seq[Scoped]` to `Seq[BuildInfoKey]`. This requires you to change build.sbt as:

    buildInfoSettings

    sourceGenerators in Compile <+= buildInfo

    buildInfoKeys := Seq[BuildInfoKey](name, version, scalaVersion, sbtVersion)

    buildInfoPackage := "hello"

This generates the following as before:

    package hello

    object BuildInfo {
      val name = "helloworld"
      val version = "0.1-SNAPSHOT"
      val scalaVersion = "2.9.2"
      val sbtVersion = "0.12.0"
    }

In addition to normal keys, you can now map existing value using `BuildInfoKey.map` or add new fields using tuples:


    buildInfoKeys ++= Seq[BuildInfoKey](
      "custom" -> 1234,
      BuildInfo.map(name) { case (k, v) => "project" + k.capitalize -> v.capitalize }
    )

This generates:

    val custom = 1234
    val projectName = "Helloworld"

This feature was contributed by [Sciss][Sciss] ([#4][4] and [#5][5]).

## minor enhancements and bug fixes

- `java.net.URL` values are supported, instead of falling back to `String`
- `Option[A]` values are typed as options, instead of `Some[A]`
